names(final.data)
snpnames <- unique(final.data$SNP.Names)
snpnames
snpnames <- unique(final.data$SNP.Name)
snpnames
snp1.data <- final.data[final.data$SNP.Name=="Ara-1-mrdA-snp" && final.data$M.or.C=="C",]
snp1.data
snp1.data <- final.data[final.data$SNP.Name=="Ara-1-mrdA-snp" && final.data$M.or.C=="M",]
snp1.data
unique(final.data$M.or.C)
snp1.data <- final.data[final.data$SNP.Name=="Ara-1-mrdA-snp" && final.data$M.or.C==c("M"),]
snp1.data
snp1.data <- final.data[final.data$SNP.Name=="Ara-1-mrdA-snp",]
snp1.data
test <- snp1.data
test
test <- snp1.data[snp1.data$M.or.C=="M",]
test
snp1.data <- test
snp1.data <- snp1.data[order(snp1.data$order),]
snp1.data
snp2.data <- final.data[final.data$SNP.Name=="Ara-1-infB-snp",]
test <- snp2.data
snp2.data <- test[test$M.or.C=="M",]
snp2.data <- snp2.data[order(snp2.data$order),]
snp2.data
quartz()
generations <- snp1.data$generation
generations
plot(snp1.data$predicted.b.allele.freq.fit~generations)
plot((1-snp1.data$predicted.b.allele.freq.fit)~generations)
plot(log(1-snp1.data$predicted.b.allele.freq.fit)~generations)
plot(log(1-snp1.data$predicted.b.allele.freq.fit)~generations)
plot((1-snp1.data$predicted.b.allele.freq.fit)~generations)
plot(log(1-snp1.data$predicted.b.allele.freq.fit)~generations)
quartz()
plot(log(1-snp2.data$predicted.b.allele.freq.fit)~generations)
head(data)
the.data <- dat
the.data <- data
head(just.frequencies)
row1 <- just.frequencies[1,]
row1
y = 0.9
sapply(row1, function (x) ifelse(x >= y, 1, 0))
sum(sapply(row1, function (x) ifelse(x >= y, 1, 0)))/length(row1)
test
calculate.p.values(data,0.6)
calculate.p.values(data,0.7)
calculate.p.values(data,0.8)
calculate.p.values(data,0.95)
test
row1
numrows(data)
rows(data)
nrows(data)
nrow(data)
the.data <- data
as.vector(row1)
data.frame(Frequency=row1)
unlist(row1)
typeof(row1)
data.frame(Frequency=as.vector(unlist(row1)))
data.frame(Frequency=as.vectorunlist(row1))
data.frame(Frequency=unlist(row1))
current.row <- row1
data.to.plot
data.to.plot
quartz()
    qplot(x=data.to.plot$Frequency, binwidth=0.01)
    qplot(x=data.to.plot$Frequency, binwidth=0.05)
head(the.data)
i = 1
current.row
x
row.without.x
data.to.plot
data.to.plot
this.plot
quartz()
this.plot
quartz()
this.plot
 x
filename
plot.null.distributions(data)
calculate.p.values(data)
calculate.p.values(data, 0.95)
names(final.data)
ordered.time.plot.data
the.final.data <- final.data
interval <- c(0.05, 0.95)
omitfirst2K <- FALSE
coarse.grained <- FALSE
ordered.time.plot.data
head(data)
names(data)
head(data)
the.data <- data
head(the.data)
y=9000
p.val
p.val
head(the.data)
head(the.data)
quartz()
this.plot
  this.plot <- ggplot(the.data, aes(x=Generations, fill=Tail)) + geom_histogram(binwidth=75)
this.plot
  this.plot <- ggplot(the.data, aes(x=Generations, fill=Tail)) + geom_histogram(binwidth=500)
this.plot
head(final.data)
unique(final.data$SNP.Name)
warnings()
install.packages("reshape2")
plate.data <- tenK.plate.data
control.wells <- tenK.control.wells
head(genotype.table)
plate.data <- 10K.plate.data
plate.data <- tenK.plate.data
control.wells <- tenK.control.wells
genotype.table
genotype.table <- genotype.table[,c("Ara.1.leuO.ilvI.snp", "Ara.1.nadR..2.snp", "Ara.1.elaD.snp", "Ara.1.hsdM.snp", "Ara.1.maeB.talA.snp", "Ara.1.pflC.del.d", "Ara.1.araJ.snp", "Ara.1.yhdG.fis.snp","Ara.1.yghJ.snp", "Ara.1.rpsM.snp", "Ara.1.yedW.yedX.snp", "Ara.1.gltB.del.d", "Ara.1.nuoG.snp", "Ara.1.atoS.snp", "Ara.1.nuoM.snp", "Ara.1.acs.nrfA.snp", "Ara.1.rpsA.snp", "Ara.1.topA.snp", "Ara.1.mrdA.snp", "Ara.1.infB.snp", "Ara.1.ybaL.ins.d", "Ara.1.yegI.snp", "Ara.1.malT.snp", "Ara.1.spoT.snp", "Ara.1.nagC.snp", "Ara.1.pykF..3.ins.u", "Ara.1.ebgR.snp", "Ara.1.pykF..4.snp", "Ara.1.yaaH.snp", "Ara.1.arcB.snp", "Ara.1.mgrB.yobH.snp", "Ara.1.mrdB.snp", "Ara.1.x.thiC.snp", "Ara.1.tdcR.yhaB.snp", "Ara.1.iclR.snp", "Ara.1.narI.ychS.snp", "Ara.1.yijC.snp", "Ara.1.uvrB.del.d", "Ara.1.rspA.ynfA.snp", "Ara.1.nirC.snp", "Ara.1.dhaM.snp", "Ara.1.pykF.snp", "Ara.1.glpE.snp", "Ara.1.gltI.snp", "Ara.1.mutT.ins.u", "Ara.1.ycbX.ycbY.snp", "Ara.1.ybjN.potF.snp", "Ara.1.pcnB.snp", "Ara.1.iclR..2.snp", "Ara.1.rpsD.snp", "Ara.1.mreB.snp", "Ara.1.ycgH.snp", "Well")]
names(genotype.table)
test <- c("Ara.1.leuO.ilvI.snp", "Ara.1.nadR..2.snp", "Ara.1.elaD.snp", "Ara.1.hsdM.snp", "Ara.1.maeB.talA.snp", "Ara.1.pflC.del.d", "Ara.1.araJ.snp", "Ara.1.yhdG.fis.snp","Ara.1.yghJ.snp", "Ara.1.rpsM.snp", "Ara.1.yedW.yedX.snp", "Ara.1.gltB.del.d", "Ara.1.nuoG.snp", "Ara.1.atoS.snp", "Ara.1.nuoM.snp", "Ara.1.acs.nrfA.snp", "Ara.1.rpsA.snp", "Ara.1.topA.snp", "Ara.1.mrdA.snp", "Ara.1.infB.snp", "Ara.1.ybaL.ins.d", "Ara.1.yegI.snp", "Ara.1.malT.snp", "Ara.1.spoT.snp", "Ara.1.nagC.snp", "Ara.1.pykF..3.ins.u", "Ara.1.ebgR.snp", "Ara.1.pykF..4.snp", "Ara.1.yaaH.snp", "Ara.1.arcB.snp", "Ara.1.mgrB.yobH.snp", "Ara.1.mrdB.snp", "Ara.1.x.thiC.snp", "Ara.1.tdcR.yhaB.snp", "Ara.1.iclR.snp", "Ara.1.narI.ychS.snp", "Ara.1.yijC.snp", "Ara.1.uvrB.del.d", "Ara.1.rspA.ynfA.snp", "Ara.1.nirC.snp", "Ara.1.dhaM.snp", "Ara.1.pykF.snp", "Ara.1.glpE.snp", "Ara.1.gltI.snp", "Ara.1.mutT.ins.u", "Ara.1.ycbX.ycbY.snp", "Ara.1.ybjN.potF.snp", "Ara.1.pcnB.snp", "Ara.1.iclR..2.snp", "Ara.1.rpsD.snp", "Ara.1.mreB.snp", "Ara.1.ycgH.snp", "Well")
test <- c("Ara.1.leuO.ilvI.snp")
test <- c("Ara.1.leuO.ilvI.snp", "Ara.1.nadR..2.snp")
 test <- c("Ara.1.leuO.ilvI.snp", "Ara.1.nadR..2.snp", "Ara.1.elaD.snp", "Ara.1.hsdM.snp", "Ara.1.maeB.talA.snp", "Ara.1.pflC.del.d", "Ara.1.araJ.snp", "Ara.1.yhdG.fis.snp","Ara.1.yghJ.snp")
 test <- c("Ara.1.leuO.ilvI.snp", "Ara.1.nadR..2.snp", "Ara.1.elaD.snp", "Ara.1.hsdM.snp", "Ara.1.maeB.talA.snp", "Ara.1.pflC.del.d", "Ara.1.araJ.snp", "Ara.1.yhdG.fis.snp","Ara.1.yghJ.snp", "Ara.1.rpsM.snp", "Ara.1.yedW.yedX.snp", "Ara.1.gltB.del.d", "Ara.1.nuoG.snp", "Ara.1.atoS.snp", "Ara.1.nuoM.snp", "Ara.1.acs.nrfA.snp", "Ara.1.rpsA.snp", "Ara.1.topA.snp", "Ara.1.mrdA.snp", "Ara.1.infB.snp", "Ara.1.ybaL.ins.d", "Ara.1.yegI.snp", "Ara.1.malT.snp", "Ara.1.spoT.snp", "Ara.1.nagC.snp", "Ara.1.pykF..3.ins.u", "Ara.1.ebgR.snp", "Ara.1.pykF..4.snp", "Ara.1.yaaH.snp", "Ara.1.arcB.snp", "Ara.1.mgrB.yobH.snp", "Ara.1.mrdB.snp")
 test <- c("Ara.1.leuO.ilvI.snp", "Ara.1.nadR..2.snp", "Ara.1.elaD.snp", "Ara.1.hsdM.snp", "Ara.1.maeB.talA.snp", "Ara.1.pflC.del.d", "Ara.1.araJ.snp", "Ara.1.yhdG.fis.snp","Ara.1.yghJ.snp", "Ara.1.rpsM.snp", "Ara.1.yedW.yedX.snp", "Ara.1.gltB.del.d", "Ara.1.nuoG.snp", "Ara.1.atoS.snp", "Ara.1.nuoM.snp", "Ara.1.acs.nrfA.snp", "Ara.1.rpsA.snp", "Ara.1.topA.snp", "Ara.1.mrdA.snp", "Ara.1.infB.snp", "Ara.1.ybaL.ins.d", "Ara.1.yegI.snp", "Ara.1.malT.snp", "Ara.1.spoT.snp", "Ara.1.nagC.snp", "Ara.1.pykF..3.ins.u", "Ara.1.ebgR.snp", "Ara.1.pykF..4.snp", "Ara.1.yaaH.snp", "Ara.1.arcB.snp", "Ara.1.mgrB.yobH.snp", "Ara.1.mrdB.snp", "Ara.1.x.thiC.snp")
 test <- c("Ara.1.leuO.ilvI.snp", "Ara.1.nadR..2.snp", "Ara.1.elaD.snp", "Ara.1.hsdM.snp", "Ara.1.maeB.talA.snp", "Ara.1.pflC.del.d", "Ara.1.araJ.snp", "Ara.1.yhdG.fis.snp","Ara.1.yghJ.snp", "Ara.1.rpsM.snp", "Ara.1.yedW.yedX.snp", "Ara.1.gltB.del.d", "Ara.1.nuoG.snp", "Ara.1.atoS.snp", "Ara.1.nuoM.snp", "Ara.1.acs.nrfA.snp", "Ara.1.rpsA.snp", "Ara.1.topA.snp", "Ara.1.mrdA.snp", "Ara.1.infB.snp", "Ara.1.ybaL.ins.d", "Ara.1.yegI.snp", "Ara.1.malT.snp", "Ara.1.spoT.snp", "Ara.1.nagC.snp", "Ara.1.pykF..3.ins.u", "Ara.1.ebgR.snp", "Ara.1.pykF..4.snp", "Ara.1.yaaH.snp", "Ara.1.arcB.snp", "Ara.1.mgrB.yobH.snp", "Ara.1.mrdB.snp", "Ara.1.x.thiC.snp", "Ara.1.tdcR.yhaB.snp", "Ara.1.iclR.snp", "Ara.1.narI.ychS.snp", "Ara.1.yijC.snp", "Ara.1.uvrB.del.d")
 test <- c("Ara.1.leuO.ilvI.snp", "Ara.1.nadR..2.snp", "Ara.1.elaD.snp", "Ara.1.hsdM.snp", "Ara.1.maeB.talA.snp", "Ara.1.pflC.del.d", "Ara.1.araJ.snp", "Ara.1.yhdG.fis.snp","Ara.1.yghJ.snp", "Ara.1.rpsM.snp", "Ara.1.yedW.yedX.snp", "Ara.1.gltB.del.d", "Ara.1.nuoG.snp", "Ara.1.atoS.snp", "Ara.1.nuoM.snp", "Ara.1.acs.nrfA.snp", "Ara.1.rpsA.snp", "Ara.1.topA.snp", "Ara.1.mrdA.snp", "Ara.1.infB.snp", "Ara.1.ybaL.ins.d", "Ara.1.yegI.snp", "Ara.1.malT.snp", "Ara.1.spoT.snp", "Ara.1.nagC.snp", "Ara.1.pykF..3.ins.u", "Ara.1.ebgR.snp", "Ara.1.pykF..4.snp", "Ara.1.yaaH.snp", "Ara.1.arcB.snp", "Ara.1.mgrB.yobH.snp", "Ara.1.mrdB.snp", "Ara.1.x.thiC.snp", "Ara.1.tdcR.yhaB.snp", "Ara.1.iclR.snp", "Ara.1.narI.ychS.snp", "Ara.1.yijC.snp", "Ara.1.uvrB.del.d", "Ara.1.rspA.ynfA.snp", "Ara.1.nirC.snp", "Ara.1.dhaM.snp", "Ara.1.pykF.snp")
 test <- c("Ara.1.leuO.ilvI.snp", "Ara.1.nadR..2.snp", "Ara.1.elaD.snp", "Ara.1.hsdM.snp", "Ara.1.maeB.talA.snp", "Ara.1.pflC.del.d", "Ara.1.araJ.snp", "Ara.1.yhdG.fis.snp","Ara.1.yghJ.snp", "Ara.1.rpsM.snp", "Ara.1.yedW.yedX.snp", "Ara.1.gltB.del.d", "Ara.1.nuoG.snp", "Ara.1.atoS.snp", "Ara.1.nuoM.snp", "Ara.1.acs.nrfA.snp", "Ara.1.rpsA.snp", "Ara.1.topA.snp", "Ara.1.mrdA.snp", "Ara.1.infB.snp", "Ara.1.ybaL.ins.d", "Ara.1.yegI.snp", "Ara.1.malT.snp", "Ara.1.spoT.snp", "Ara.1.nagC.snp", "Ara.1.pykF..3.ins.u", "Ara.1.ebgR.snp", "Ara.1.pykF..4.snp", "Ara.1.yaaH.snp", "Ara.1.arcB.snp", "Ara.1.mgrB.yobH.snp", "Ara.1.mrdB.snp", "Ara.1.x.thiC.snp", "Ara.1.tdcR.yhaB.snp", "Ara.1.iclR.snp", "Ara.1.narI.ychS.snp", "Ara.1.yijC.snp", "Ara.1.uvrB.del.d", "Ara.1.rspA.ynfA.snp", "Ara.1.nirC.snp", "Ara.1.dhaM.snp", "Ara.1.pykF.snp", "Ara.1.glpE.snp", "Ara.1.gltI.snp", "Ara.1.mutT.ins.u", "Ara.1.ycbX.ycbY.snp")
 test <- c("Ara.1.leuO.ilvI.snp", "Ara.1.nadR..2.snp", "Ara.1.elaD.snp", "Ara.1.hsdM.snp", "Ara.1.maeB.talA.snp", "Ara.1.pflC.del.d", "Ara.1.araJ.snp", "Ara.1.yhdG.fis.snp","Ara.1.yghJ.snp", "Ara.1.rpsM.snp", "Ara.1.yedW.yedX.snp", "Ara.1.gltB.del.d", "Ara.1.nuoG.snp", "Ara.1.atoS.snp", "Ara.1.nuoM.snp", "Ara.1.acs.nrfA.snp", "Ara.1.rpsA.snp", "Ara.1.topA.snp", "Ara.1.mrdA.snp", "Ara.1.infB.snp", "Ara.1.ybaL.ins.d", "Ara.1.yegI.snp", "Ara.1.malT.snp", "Ara.1.spoT.snp", "Ara.1.nagC.snp", "Ara.1.pykF..3.ins.u", "Ara.1.ebgR.snp", "Ara.1.pykF..4.snp", "Ara.1.yaaH.snp", "Ara.1.arcB.snp", "Ara.1.mgrB.yobH.snp", "Ara.1.mrdB.snp", "Ara.1.x.thiC.snp", "Ara.1.tdcR.yhaB.snp", "Ara.1.iclR.snp", "Ara.1.narI.ychS.snp", "Ara.1.yijC.snp", "Ara.1.uvrB.del.d", "Ara.1.rspA.ynfA.snp", "Ara.1.nirC.snp", "Ara.1.dhaM.snp", "Ara.1.pykF.snp", "Ara.1.glpE.snp", "Ara.1.gltI.snp", "Ara.1.mutT.ins.u", "Ara.1.ycbX.ycbY.snp", "Ara.1.ybjN.potF.snp", "Ara.1.pcnB.snp", "Ara.1.iclR..2.snp", "Ara.1.rpsD.snp", "Ara.1.mreB.snp", "Ara.1.ycgH.snp")
 test <- c("Ara.1.leuO.ilvI.snp", "Ara.1.nadR..2.snp", "Ara.1.elaD.snp", "Ara.1.hsdM.snp", "Ara.1.maeB.talA.snp", "Ara.1.pflC.del.d", "Ara.1.araJ.snp", "Ara.1.yhdG.fis.snp","Ara.1.yghJ.snp", "Ara.1.rpsM.snp", "Ara.1.yedW.yedX.snp", "Ara.1.gltB.del.d", "Ara.1.nuoG.snp", "Ara.1.atoS.snp", "Ara.1.nuoM.snp", "Ara.1.acs.nrfA.snp", "Ara.1.rpsA.snp", "Ara.1.topA.snp", "Ara.1.mrdA.snp", "Ara.1.infB.snp", "Ara.1.ybaL.ins.d", "Ara.1.yegI.snp", "Ara.1.malT.snp", "Ara.1.spoT.snp", "Ara.1.nagC.snp", "Ara.1.pykF..3.ins.u", "Ara.1.ebgR.snp", "Ara.1.pykF..4.snp", "Ara.1.yaaH.snp", "Ara.1.arcB.snp", "Ara.1.mgrB.yobH.snp", "Ara.1.mrdB.snp", "Ara.1.x.thiC.snp", "Ara.1.tdcR.yhaB.snp", "Ara.1.iclR.snp", "Ara.1.narI.ychS.snp", "Ara.1.yijC.snp", "Ara.1.uvrB.del.d", "Ara.1.rspA.ynfA.snp", "Ara.1.nirC.snp", "Ara.1.dhaM.snp", "Ara.1.pykF.snp", "Ara.1.glpE.snp", "Ara.1.gltI.snp", "Ara.1.mutT.ins.u", "Ara.1.ycbX.ycbY.snp", "Ara.1.ybjN.potF.snp", "Ara.1.pcnB.snp", "Ara.1.iclR..2.snp")
 test <- c("Ara.1.leuO.ilvI.snp", "Ara.1.nadR..2.snp", "Ara.1.elaD.snp", "Ara.1.hsdM.snp", "Ara.1.maeB.talA.snp", "Ara.1.pflC.del.d", "Ara.1.araJ.snp", "Ara.1.yhdG.fis.snp","Ara.1.yghJ.snp", "Ara.1.rpsM.snp", "Ara.1.yedW.yedX.snp", "Ara.1.gltB.del.d", "Ara.1.nuoG.snp", "Ara.1.atoS.snp", "Ara.1.nuoM.snp", "Ara.1.acs.nrfA.snp", "Ara.1.rpsA.snp", "Ara.1.topA.snp", "Ara.1.mrdA.snp", "Ara.1.infB.snp", "Ara.1.ybaL.ins.d", "Ara.1.yegI.snp", "Ara.1.malT.snp", "Ara.1.spoT.snp", "Ara.1.nagC.snp", "Ara.1.pykF..3.ins.u", "Ara.1.ebgR.snp", "Ara.1.pykF..4.snp", "Ara.1.yaaH.snp", "Ara.1.arcB.snp", "Ara.1.mgrB.yobH.snp", "Ara.1.mrdB.snp", "Ara.1.x.thiC.snp", "Ara.1.tdcR.yhaB.snp", "Ara.1.iclR.snp", "Ara.1.narI.ychS.snp", "Ara.1.yijC.snp", "Ara.1.uvrB.del.d", "Ara.1.rspA.ynfA.snp", "Ara.1.nirC.snp", "Ara.1.dhaM.snp", "Ara.1.pykF.snp", "Ara.1.glpE.snp", "Ara.1.gltI.snp", "Ara.1.mutT.ins.u", "Ara.1.ycbX.ycbY.snp", "Ara.1.ybjN.potF.snp", "Ara.1.pcnB.snp", "Ara.1.iclR..2.snp", "Ara.1.rpsD.snp", "Ara.1.mreB.snp")
test <- c("Ara.1.leuO.ilvI.snp", "Ara.1.nadR..2.snp", "Ara.1.elaD.snp", "Ara.1.hsdM.snp", "Ara.1.maeB.talA.snp", "Ara.1.pflC.del.d", "Ara.1.araJ.snp", "Ara.1.yhdG.fis.snp","Ara.1.yghJ.snp", "Ara.1.rpsM.snp", "Ara.1.yedW.yedX.snp", "Ara.1.gltB.del.d", "Ara.1.nuoG.snp", "Ara.1.atoS.snp", "Ara.1.nuoM.snp", "Ara.1.acs.nrfA.snp", "Ara.1.rpsA.snp", "Ara.1.topA.snp", "Ara.1.mrdA.snp", "Ara.1.infB.snp", "Ara.1.ybaL.ins.d", "Ara.1.yegI.snp", "Ara.1.malT.snp", "Ara.1.spoT.snp", "Ara.1.nagC.snp", "Ara.1.pykF..3.ins.u", "Ara.1.ebgR.snp", "Ara.1.pykF..4.snp", "Ara.1.yaaH.snp", "Ara.1.arcB.snp", "Ara.1.mgrB.yobH.snp", "Ara.1.mrdB.snp", "Ara.1.x.thiC.snp", "Ara.1.tdcR.yhaB.snp", "Ara.1.iclR.snp", "Ara.1.narI.ychS.snp", "Ara.1.yijC.snp", "Ara.1.uvrB.del.d", "Ara.1.rspA.ynfA.snp", "Ara.1.nirC.snp", "Ara.1.dhaM.snp", "Ara.1.pykF.snp", "Ara.1.glpE.snp", "Ara.1.gltI.snp", "Ara.1.mutT.ins.u", "Ara.1.ycbX.ycbY.snp", "Ara.1.ybjN.potF.snp", "Ara.1.pcnB.snp", "Ara.1.iclR..2.snp", "Ara.1.rpsD.snp", "Ara.1.mreB.snp", "Ara.1.ycgH.snp")
 test <- c("Ara.1.leuO.ilvI.snp", "Ara.1.nadR..2.snp", "Ara.1.elaD.snp", "Ara.1.hsdM.snp", "Ara.1.maeB.talA.snp", "Ara.1.pflC.del.d", "Ara.1.araJ.snp", "Ara.1.yhdG.fis.snp","Ara.1.yghJ.snp", "Ara.1.rpsM.snp", "Ara.1.yedW.yedX.snp", "Ara.1.gltB.del.d", "Ara.1.nuoG.snp", "Ara.1.atoS.snp", "Ara.1.nuoM.snp", "Ara.1.acs.nrfA.snp", "Ara.1.rpsA.snp", "Ara.1.topA.snp", "Ara.1.mrdA.snp", "Ara.1.infB.snp", "Ara.1.ybaL.ins.d", "Ara.1.yegI.snp", "Ara.1.malT.snp", "Ara.1.spoT.snp", "Ara.1.nagC.snp", "Ara.1.pykF..3.ins.u", "Ara.1.ebgR.snp", "Ara.1.pykF..4.snp", "Ara.1.yaaH.snp", "Ara.1.arcB.snp", "Ara.1.mgrB.yobH.snp", "Ara.1.mrdB.snp", "Ara.1.x.thiC.snp", "Ara.1.tdcR.yhaB.snp", "Ara.1.iclR.snp", "Ara.1.narI.ychS.snp", "Ara.1.yijC.snp", "Ara.1.uvrB.del.d", "Ara.1.rspA.ynfA.snp", "Ara.1.nirC.snp", "Ara.1.dhaM.snp", "Ara.1.pykF.snp", "Ara.1.glpE.snp", "Ara.1.gltI.snp", "Ara.1.mutT.ins.u", "Ara.1.ycbX.ycbY.snp", "Ara.1.ybjN.potF.snp", "Ara.1.pcnB.snp", "Ara.1.iclR..2.snp", "Ara.1.rpsD.snp", "Ara.1.mreB.snp", "Ara.1.ycgH.snp")
makeHeatmap(seven.point.fiveK.genotype.table, seven.point.fiveK.control.wells, path="/Users/Rohandinho/Desktop/", filename.prefix="test_")
genotype.table <- seven.point.fiveK.genotype.table
control.wells <- seven.point.fiveK.control.wells
filename.prefix <- "7.5K_"
the.data <- final.data
output=fixation.output
use.theta=FALSE
fixations=TRUE
width.parameter=6
height.parameter=3
ordered.mutations
snp <- "Ara-1-malT-snp"
trajectory.data
mdata
cdata
bottom.line
cdata
cdata
tenK.genotype.table <- genotype.table
genotype.table <- tenK.genotype.table
control.wells <- tenK.control.wells
path="/Users/Rohandinho/Desktop/"
filename.prefix="10K_"
row.inds
row.names
col.inds
col.names
test.col.order <- c(col.inds[3:14],col.inds[2],col.inds[1],col.inds[15:25])
test.col.order.names <- sapply(new.col.order, function (x) col.names[x])
test.col.order.names <- sapply(test.col.order, function (x) col.names[x])
test.col.order
test.col.order.names
 col.inds
col.names
 genotype.table <- seven.point.fiveK.genotype.table
control.wells <- seven.point.fiveK.control.wells
filename.prefix="7.5K_"
col.inds
col.names
type(col.inds)
typeof(col.inds)
testme <- c(8,9,2,1,6,3,5,4,7,12,15,17,11,13,14,16,10)
length(testme)
typeof(testme)
testme
integer(testme)
testme <- integer(8,9,2,1,6,3,5,4,7,12,15,17,11,13,14,16,10)
testme <- integer(c(8,9,2,1,6,3,5,4,7,12,15,17,11,13,14,16,10))
testme <- as.integer(c(8,9,2,1,6,3,5,4,7,12,15,17,11,13,14,16,10))
testme
new.col.order.names
quartz()
heatmap(genotype.matrix, col=c"grey90", "lightgreen"), cexRow=0.3, cexCol=0.75, Colc=NA, Rowv=NA)
head(genotype.matrix
)
heatmap(genotype.matrix, col=c("grey90", "lightgreen"), cexRow=0.3, cexCol=0.75, Colc=NA, Rowv=NA)
heatmap(genotype.matrix, col=c("grey90", "lightgreen"), cexRow=0.3, cexCol=0.75, Colv=NA, Rowv=NA)
heatmap(genotype.matrix,col=topo.colors(2),cexRow=0.3, cexCol=0.8, Colv=NA,)
row.inds
row.names
rownames(genotype.matrix)
heatmap.returnvals <- heatmap(new.order.genotype.matrix,col=c("grey90", "lightgreen"), cexRow=0.3, cexCol=0.75, Colv=NA , Rowv=NA)
col.inds
col.inds
rol.inds
col.inds
col.order.names
col.names
genotype.table <- tenK.genotype.table
control.wells <- tenK.control.wells
path = "/Users/Rohandinho/Desktop/"
filename.prefix="10K_"
col.inds
col.names
new.col.order
new.col.order.names
seq(14,3)
new.col.order
head(first.calibrated)
names(first.calibrated)
unique(first.calibrated$SNP.Name)
first.calibrated[SNP.Name=="Ara-1-dhaM-snp",]
first.calibrated[first.calibrated$SNP.Name=="Ara-1-dhaM-snp",]
first.calibrated[first.calibrated$SNP.Name=="Ara-1-dhaM-snp" && first.calibrated$Generation=12500,]
first.calibrated[first.calibrated$SNP.Name=="Ara-1-dhaM-snp" && first.calibrated$Generation==12500,]
first.calibrated[first.calibrated$SNP.Name=="Ara-1-dhaM-snp"]$Generation
first.calibrated[first.calibrated$SNP.Name=="Ara-1-dhaM-snp"]
first.calibrated[first.calibrated$SNP.Name=="Ara-1-dhaM-snp",]$Generation
first.calibrated[first.calibrated$SNP.Name=="Ara-1-dhaM-snp",]
?write.csv(
?write.csv
write.csv(first.calibrated, file="/Users/Rohandinho/Desktop/first.csv")
write.csv(second.calibrated, file="/Users/Rohandinho/Desktop/second.csv")
write.csv(third.calibrated, file="/Users/Rohandinho/Desktop/third.csv")
first.calibrated[first.calibrated$SNP.Name=="Ara-1-dhaM-snp",first.calibrated$Generation==12500]
first.calibrated[first.calibrated$Generation=12000,]
first.calibrated[first.calibrated$Generation==12000,]
first.calibrated[first.calibrated$SNP.Name=="Ara-1-dhaM-snp" && first.calibrated$generation==12500,]
first.calibrated[first.calibrated$generation==12000,]
names(first.calibrated)
test <- first.calibrated
test$R <- NULL
test$Y <- NULL
test$order <- NULL
test$X <- NULL
test$X.Raw <- NULL
test$GC.Score <- NULL
test[test$SNP.Name=="Ara-1-dhaM-snp",]
test$Sample.ID <- NULL
test$Position <- NULL
 test <- test[test$SNP.Name=="Ara-1-dhaM-snp",]
head(test)
test[test$generation=12500,]
test[test$generation==12500,]
test
test <- first.calibrated[SNP.Name=="Ara-1-dhaM-snp",]
test <- first.calibrated[first.calibrated$SNP.Name=="Ara-1-dhaM-snp",]
head(test)
test$Position <- NULL
test$Sample.ID <- NULL
test$Allele1...Top <- NULL
test$Allele2...Top <- NULL
test$GC.Score <- NULL
test$X <- NULL
test$Y <- NULL
test$X.Raw <- NULL
test$Y.Raw <- NULL
test[test$Generation=1000,]
test[test$Generation==1000,]
test[test$generation==1000,]
test[test$generation==12000,]
test[test$generation==12500,]
test <- final.data
test1 <- test[test$SNP.Name=="Ara-1-dhaM-snp",]
test1[test1$generation==12500,]
test <- all.calibrated
test1 <- test[test$SNP.Name=="Ara-1-dhaM-snp",]
test1[test1$generation==12500,]
test1[test1$generation==12000,]
test1[test1$generation==12500,]
genotype.table <- tenK.genotype.table
genotype.table <- tenK.genotype.table
control.wells <- tenK.control.wells
head(final.data)
names(final.data)
names(first.plate.data)
test1 <- unique(first.plate.data$SNP.Name)
test2 <- unique(first.plate.data$Position)
test1
test2
test3 <- cbind(test1,test2)
test3
test1
SNP.Names <- test1
locations <- test2
locations
SNP.Names
write.csv(SNP.Names, file="/Users/Rohandinho/Desktop/Table1.csv")
write.csv(Positions, file="/Users/Rohandinho/Desktop/Table2.csv")
write.csv(locations, file="/Users/Rohandinho/Desktop/Table2.csv")
head(first.calibration.standards)
tail(first.calibration.standards)
first.calibration.standards
scaled.first.calibration.standards
head(pyrosequencing.data)
pyro.data <- pyrosequencing.data
quartz()
plotPyrosequencingResults(pyrosequencing.data)
head(data.to.plot)
plotPyrosequencingResults(pyrosequencing.data)
plotPyrosequencingResults(pyrosequencing.data)
plotPyrosequencingResults(pyrosequencing.data)
plotPyrosequencingResults(pyrosequencing.data)
plotPyrosequencingResults(pyrosequencing.data)
names(final.data)
almost.final.data$generation
names(first.calibration.standards)
names(almost.final.data)
unique(almost.final.data$SNP.Name)
unique(almost.final.data1$SNP.Name)
rows(almost.final.data)
length(almost.final.data$SNP.Name)
length(almost.final.data1$SNP.Name)
length(almost.final.data2$SNP.Name)
unique(almost.final.data2$generation)
length(almost.final.data3$SNP.Name)
unique(final.data$SNP.Name)
unique(final.data$SNP.Name)
the.data <- final.data
use.theta=FALSE
add.error.bars = FALSE
width.parameter=6
height.parameter=3
with.gene.name=TRUE
bottomline=TRUE
makeMultiPlot=TRUE
makeMultiPlot=FALSE
unique(final.data$SNP.Name)
length(ordered.mutations)
the.data <- final.data
output <- all.output
use.theta=FALSE
wiehgt.parameter = 6
height.parameter=3
add.err.bars=FALSE
with.gene.name=TRUE
bottomline=FALSE
makeMultiPlot=TRUE
the.data <- final.data
output <- S4.output
head(fixations)
snp <- "Ara-1-arcB-snp"
illumina.snp.data$actual
dev.off()
quartz()
uncalibrated.plot
quartz()
calibrated.plot
warnings()
fixations
for (snp in fixations) print(snp)
graphS4(final.data, S4.output)
snp = "Ara-1-narI-ychS-snp"
quartz()
uncalibrated.plot
quartz()
calibrated.plot
illumina.snp.data$actual
illumina.snp.data$predicted.b.allele.freq.fit
illumina.snp.data$predicted.theta.freq.fit
graphS4(final.data, S4.output)
graphS4(final.data, S4.output)
graphS4(final.data, S4.output)
snp = "Ara-1-narI-ychS-snp"
the.data <- final.data
names(illumina.snp.data)
illumina.snp.data$B.Allele.Freq
illumina.snp.data$measured.b.allele.freq
illumina.snp.data$predicted.b.allele.freq.fit
illumina.snp.data$predicted.theta.fit
illumina.snp.data$calibrated
head(illumina.snp.data)
test <- illumina.snp.data[illumina.snp.data$M.or.C=='C',]
test
test[test$generation==20000,]
x
test
test = first.calibrated[first.calibrated$SNP.Name=="Ara-1-narI-ychS-snp",]
test
test = second.calibrated[second.calibrated$SNP.Name=="Ara-1-narI-ychS-snp",]
test
test = third.calibrated[third.calibrated$SNP.Name=="Ara-1-narI-ychS-snp",]
test
the.plate.data <- first.plate.data
the.calibration.standards <- first.calibration.standards
snp
ancestor.theta
twenty.k.theta
forty.k.theta
subset(illumina.snp.data,Sample.ID==twenty.k.clone.ID,B.Allele.Frequency)
names(illumina.snp.data)
subset(illumina.snp.data,Sample.ID==twenty.k.clone.ID,B.Allele.Freq)
rev
    if(rev) {
      measured.theta <- sapply(measured.theta,function(x) 1-x)
      measured.b.allele.freq <- sapply(measured.b.allele.freq,function(x) 1-x)
      if (is.na(twenty.k.theta)) twenty.k.theta <- 1
      if (is.na(forty.k.theta)) forty.k.theta <- 1
      twenty.k.theta <- 1 - twenty.k.theta
      forty.k.theta <- 1 - forty.k.theta
    }

twenty.k.theta
forty.k.theta
ancestor.theta
measured.b.allele.freq
uncalibrated.plot
dev.off()
quartz()
uncalibrated.plot
ancestor.theta
twenty.k.theta
forty.k.theta
twenty.k.b.allele.freq
forty.k.b.allele.freq
ancestor.b.allele.freq
warnings()
