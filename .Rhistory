is.na(gen.data$predicted.b.allele.freq.fit)
!is.na(gen.data$predicted.b.allele.freq.fit)
fixed.snps
fixed.snps <- gen.data[gen.data$predicted.b.allele.freq.fit > 0.95,]$SNP.Name
fixed.snps
fixed.snps[!is.na(fixed.snps),]
fixed.snps[!is.na(fixed.snps)]
fixed.snps <- fixed.snps[!is.na(fixed.snps)]
fixed.genotype <- new(Genotype)
fixed.genotype <- new("Genotype")
fixed.genotype
class(fixed.snps)
fixed.snps <- as.list(fixed.snps)
fixed.snps
  fixed.snps <- gen.data[gen.data$predicted.b.allele.freq.fit > 0.95,]$SNP.Name
  fixed.snps <- fixed.snps[!is.na(fixed.snps)]
fixed.snps
as.character(fixed.snps)
  fixed.snps <- as.character(fixed.snps[!is.na(fixed.snps)])
fixed.snps
class(fixed.snps)
as.list(fixed.snps)
 source("GenotypePredictor.R")
class(fixed.genotype)
"Genotype"
Genotype
  fixed.genotype <- new("Genotype",alleles=fixed.snps,frequency=1)
fixed.genotype
source("GenotypePredictor.R")
source("GenotypePredictor.R")
reconstructions
keys(reconstruction)
reconstruction['1000']
reconstructions['1000']
gen
as.character(gen)
source("GenotypePredictor.R")
reconstructions
source("GenotypePredictor.R")
reconstructions
?ordered
?order
sort.list(reconstructions)
?sort.list
rev(reconstructions)
source("GenotypePredictor.R")
reconstructions
reconstructions['100']
reconstructions['500']
snp.trajectory.data[geneneration=1000,]
snp.trajectory.data[generation=1000,]
names(snp.trajectory.data)
snp.trajectory.data$generation
generations
source("GenotypePredictor.R")
warnings()
trajectory
source("GenotypePredictor.R")
generations
reconstructions[1]
subset(snp.trajectory.data,generation==500)
generations
reconstructions[2]
reconstructions[3]
reconstructions[4]
subset(snp.trajectory.data,generation==2000)
source("GenotypePredictor.R")
reconstructions
generations
reconstructions[2]
reconstructions[3]
reconstructions[4]
reconstrutions[5]
reconstructions[5]
reconstructions[6]
reconstructions[7]
subset(snp.trajectory.data,generation==3500)
source("GenotypePredictor.R")
reconstructions
2..4
for (i in 2..4){ print() }
for (i in 2:4){ print() }
for (i in 2:4){ print("") }
length(reconstructions)
for (i in 2:length(line.of.descent)-1) {
  
}
for (i in 2:length(reconstructions)-1) {
for (i in 2:length(reconstructions)-1) { print(i) }
}
source("GenotypePredictor.R")
line.of.descent
line.of.descent$30000
length(unique(gen.data$SNP.Name))
?intersect
source("GenotypePredictor.R")
class(line.of.descent['20000'])
line.of.descent['20000']
line.of.descent[['20000']]
class(line.of.descent[['20000']])
source("GenotypePredictor.R")
source("GenotypePredictor.R")
source("GenotypePredictor.R")
line.of.descent
source("GenotypePredictor.R")
line.of.descent
for (gen in rev(generations){
  gen.data <- subset(snp.trajectory.data,generation==gen)
  middle.snps <- gen.data[gen.data$predicted.b.allele.freq.fit < 0.9,]$SNP.Name
  print(middle.snps)
}

for (gen in rev(generations)) {
  gen.data <- subset(snp.trajectory.data,generation==gen)
  middle.snps <- gen.data[gen.data$predicted.b.allele.freq.fit < 0.9,]$SNP.Name
  print(middle.snps)
}

middle.snps <- subset(gen.data,predicted.b.allele.freq.fit < 0.9)
middle.snps
  middle.snps <- gen.data[gen.data$predicted.b.allele.freq.fit < 0.9, c("SNP.Name","predicted.b.allele.freq.fit")]
middle.snps
  middle.snps <- middle.snps[!is.na(middle.snps)]
middle.snps
  middle.snps <- gen.data[gen.data$predicted.b.allele.freq.fit < 0.9,
                          c("SNP.Name","predicted.b.allele.freq.fit")]

  middle.snps <- middle.snps[!is.na(middle.snps),]
middle.snps
 middle.snps <- gen.data[gen.data$predicted.b.allele.freq.fit < 0.9,
                          c("SNP.Name","predicted.b.allele.freq.fit")]
  middle.snps <- middle.snps[!is.na(SNP.Name) || !is.na(predicted.b.allele.freq.fit),]
middle.snps
  middle.snps <- gen.data[gen.data$predicted.b.allele.freq.fit < 0.9, c("SNP.Name","predicted.b.allele.freq.fit")]
test <- middle.snps[!is.na(SNP.Name) || !is.na(predicted.b.allele.freq.fit),]
  test <- subset(middle.snps,!is.na(SNP.Name) || !is.na(predicted.b.allele.freq.fit))
test
  test <- subset(middle.snps,!is.na(SNP.Name) && !is.na(predicted.b.allele.freq.fit))
test
middle.snps
  test <- subset(middle.snps)
test
  test <- subset(middle.snps,!is.na(SNP.Name))
test
  test <- subset(middle.snps,!is.na(predicted.b.allele.freq.fit))
test
!is.na(middle.snps$SNP.Name)
test <- middle.snps[!is.na(SNP.Name) & !is.na(predicted.b.allele.freq.fit),]
test <- middle.snps[!is.na(middle.snps$SNP.Name) & !is.na(middle.snps$predicted.b.allele.freq.fit),]
test
test <- middle.snps[!is.na(middle.snps$SNP.Name) && !is.na(middle.snps$predicted.b.allele.freq.fit),]
test
test <- subset(middle.snps,!is.na(SNP.Name) & !is.na(predicted.b.allele.freq.fit))
test
  middle.snps <- subset(middle.snps,!is.na(SNP.Name) & !is.na(predicted.b.allele.freq.fit))
middle.snps
  middle.snps <- gen.data[gen.data$predicted.b.allele.freq.fit < 0.9
                          & gen.data$predicted.b.allele.freq.fit > 0,
                          c("SNP.Name","predicted.b.allele.freq.fit")]
  middle.snps <- subset(middle.snps,!is.na(SNP.Name) & !is.na(predicted.b.allele.freq.fit))
middle.snps
  sort(middle.snps,decreasing=T)
  middle.snps[order(middle.snps)]
  middle.snps[order(middle.snps$predicted.b.allele.freq.fit)]
  middle.snps[order(middle.snps$predicted.b.allele.freq.fit),]
middle.snps
